Question 3:

SELECT customer_id, product_name
FROM
(
  SELECT s.customer_id,me.product_name,
  ROW_NUMBER() OVER (PARTITION BY s.customer_id ORDER BY s.order_date, s.product_id) AS row_num
  FROM sales s
  JOIN menu me
  ON me.product_id=s.product_id
  ORDER BY s.customer_id
) first_order
WHERE row_num=1


Question 5: Popular item for each customer

SELECT s.customer_id,me.product_name,COUNT(s.product_id)
FROM sales s
JOIN menu me
ON me.product_id=s.product_id
WHERE s.product_id = (
  						SELECT product_id
  						FROM sales
  						GROUP BY customer_id,product_id
  						ORDER BY COUNT(product_id) DESC
  						LIMIT 1
  					)
GROUP BY customer_id, product_name
ORDER BY customer_id

QUESTION 6:

SELECT customer_id, product_name
FROM
(
  SELECT s.customer_id,me.product_name,
  ROW_NUMBER() OVER (PARTITION BY s.customer_id ORDER BY s.order_date, s.product_id) AS row_num
  FROM sales s
  JOIN members lp
  ON lp.customer_id=s.customer_id
  JOIN menu me
  ON me.product_id=s.product_id
  WHERE s.order_date >= lp.join_date
  ORDER BY s.customer_id
) first_order_lp
WHERE row_num=1

QUESTION 7:

SELECT customer_id, product_name
FROM
(
  SELECT s.customer_id,me.product_name,
  ROW_NUMBER() OVER (PARTITION BY s.customer_id ORDER BY s.order_date DESC, s.product_id DESC) AS row_num
  FROM sales s
  LEFT JOIN members lp
  ON lp.customer_id=s.customer_id
  JOIN menu me
  ON me.product_id=s.product_id
  WHERE s.order_date < lp.join_date
  OR lp.join_date IS NULL
  ORDER BY s.customer_id
) first_order_before_lp
WHERE row_num=1

QUESTION 8:(Since customer C hasn't become a member, we include that case as well)

SELECT s.customer_id,
  		 COUNT(s.product_id) AS item_purch_b4_lp,
       SUM(me.price) AS amount_spnt_b4_lp
FROM sales s
LEFT JOIN members lp
ON lp.customer_id=s.customer_id
JOIN menu me
ON me.product_id=s.product_id
WHERE s.order_date < lp.join_date
OR lp.join_date IS NULL
GROUP BY s.customer_id
ORDER BY s.customer_id

QUESTION 9:

SELECT s.customer_id,
  		 SUM(CASE WHEN me.product_name='sushi' THEN me.price*10*2
           ELSE me.price*10
           END) AS total_points
FROM sales s
JOIN menu me
ON me.product_id=s.product_id
GROUP BY s.customer_id
ORDER BY s.customer_id

QUESTION 10:

SELECT s.customer_id,
  		 SUM(CASE WHEN (s.order_date-lp.join_date)>=0
             	  AND (s.order_date-lp.join_date)<7
                THEN me.price*10*2
           ELSE me.price*10
           END) AS total_points
FROM sales s
JOIN members lp
ON lp.customer_id=s.customer_id
JOIN menu me
ON me.product_id=s.product_id
WHERE s.order_date>=lp.join_date
GROUP BY s.customer_id
ORDER BY s.customer_id
